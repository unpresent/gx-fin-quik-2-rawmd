service:
  name: quik-2-rawmd
  standard-settings-controller.enabled: true
  db-saving:
    jdbc-saver.enabled: true
    jdbc-json-operator.enabled: true
  kafka:
    server: ${KAFKA_SERVER}
    income-topics:
      standard-loader.enabled: true
      standard-offsets-controller.enabled: true
    offsets-storage:
      type: sql
    simple-listener:
      enabled: true
      name: simple-listener
      wait-on-stop-ms: 5000
      wait-on-restart-ms: 20000
      min-time-per-iteration-ms: 3000
      timeout-runner-life-ms: 60000
      print-statistics-every-ms: 1000
  messages:
    standard-queue:
      enabled: true
      name: events-queue
      max-queue-size: 5000
      print-statistics-every-ms: 1000
      priorities-count: 4
    standard-executor:
      enabled: true
      name: events-executor
      wait-on-stop-ms: 5000
      wait-on-restart-ms: 20000
      min-time-per-iteration-ms: 1000
      timeout-runner-life-ms: 60000
      print-statistics-every-ms: 1000
  channels-api:
    quik-provider-streams:
      securities-v1.enabled: true
      orders-v1.enabled: true
      deals-v1.enabled: true
      all-trades-v1.enabled: true


# Логирование
logging:
  level:
    org.springframework: info
    org.hibernate.sql: info
    org.hibernate.type: info
    org.hibernate.type.descriptor: info
    org.hibernate.pretty: info
    org.springframework.orm: info
    org.springframework.web: info

# Настройки Сервера
server:
  port: 7102

#data
spring:
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USER}
    password: ${DATASOURCE_PASS}
    hikari:
      maximum-pool-size: 2
  redis:
    host: ${REDIS_SERVER}
    port: ${REDIS_PORT}

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true